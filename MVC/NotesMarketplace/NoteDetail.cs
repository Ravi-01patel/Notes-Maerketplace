//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NotesMarketplace
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Web;

    public partial class NoteDetail
    {
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2214:DoNotCallOverridableMethodsInConstructors")]
        public NoteDetail()
        {
            this.DownloadedNotes = new HashSet<DownloadedNote>();
            this.Feedbacks = new HashSet<Feedback>();
            this.SpamReports = new HashSet<SpamReport>();
        }

        public int Note { get; set; }

        public int Users { get; set; }

        public int NoteStatus { get; set; }

        [Required]
        public string Title { get; set; }

        [Required]
        public string Category { get; set; }

        public string BookPicture { get; set; }


        [RegularExpression(@"([a-zA-Z0-9\s_\\.\-:])+(.png|.jpg|.gif|.PNG|.JPG)$", ErrorMessage = "Only Image files allowed.")]
        public HttpPostedFileBase DisplayPicture { get; set; }


        [RegularExpression(@"([a-zA-Z0-9\s_\\.\-:])+(.pdf)$", ErrorMessage = "Only PDF files allowed.")]
        public HttpPostedFileBase NotePDF { get; set; }

        public string NoteAttachment { get; set; }

        public string NoteType { get; set; }

        [Required(ErrorMessage = "Please enter number of pages")]
        [RegularExpression("([1-9][0-9]*)", ErrorMessage = "Integer number")]
        public Nullable<int> NumberOfPages { get; set; }

        [Required(ErrorMessage = "This field is required")]
        public string NotesDescription { get; set; }

        public string InstitutionName { get; set; }

        public string Country { get; set; }

        [RegularExpression(@"^[a-zA-Z][a-zA-Z\s]+$", ErrorMessage = "Use letters only please")]
        public string Course { get; set; }
        [RegularExpression("([1-9][0-9]*)", ErrorMessage = "Use only integer number")]
        public string CourseCode { get; set; }

        [RegularExpression(@"^[a-zA-Z][a-zA-Z\s]+$", ErrorMessage = "Use letters only please")]
        public string Professor { get; set; }
        public int SellPrice { get; set; }

        [RegularExpression(@"([a-zA-Z0-9\s_\\.\-:])+(.pdf)$", ErrorMessage = "Only PDF files allowed.")]
        public HttpPostedFileBase Preview { get; set; }
        public string NotePreview { get; set; }
        public Nullable<int> NoteSize { get; set; }
        public Nullable<System.DateTime> PublishedDate { get; set; }
        public string Remark { get; set; }
        public Nullable<System.DateTime> CreatedDate { get; set; }
        public Nullable<int> CreatedBy { get; set; }
        public Nullable<System.DateTime> ModifiedDate { get; set; }
        public Nullable<int> ModifiedBy { get; set; }
        public bool IsActive { get; set; }

        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<DownloadedNote> DownloadedNotes { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<Feedback> Feedbacks { get; set; }
        public virtual NoteStatu NoteStatu { get; set; }
        public virtual User User { get; set; }
        [System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Usage", "CA2227:CollectionPropertiesShouldBeReadOnly")]
        public virtual ICollection<SpamReport> SpamReports { get; set; }
    }
}
