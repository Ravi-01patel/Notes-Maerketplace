@model NotesMarketplace.Models.AdminRejectedNotes
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Notes_ActiveLink = "active";
    ViewBag.Title = "Rejected Notes";
    Layout = "~/Views/Shared/AdminCommon.cshtml";
}
<!-- Header Ends -->
<!-- Rejected Notes -->

<section id="dashboard-publish" class="mydownload-margin">
    <div class="container">
        <div class="row">
            <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                <h3>Rejected Notes</h3>
            </div>
        </div>

        <div class="row top-table">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
                <div class="div-seller text-center">
                    <p class="seller-text text-left"><span>Seller</span></p>
                    <select class="form-control inputselect seller-dd" onchange="location.href = this.value">


                        <option value="@Url.Action("RejectedNotes", "Admin", new { sellerddl = "" })">Select Seller</option>
                        @foreach (String sellerddl in Model.Sellerddl)
                        {
                            if (Request.QueryString["sellerddl"] != null)
                            {
                                if (Request.QueryString["sellerddl"].Equals(sellerddl))
                                {
                                    <option selected value="@Url.Action("RejectedNotes", "Admin", new { sellerddl = sellerddl })">@sellerddl</option>
                                    continue;
                                }
                            }
                            <option value="@Url.Action("RejectedNotes", "Admin", new { sellerddl = sellerddl, })">@sellerddl</option>
                        }
                    </select>

                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
                <form>
                    <div class="row justify-content-end extra-margin4">
                        <div class="wrapper seller-mb">
                            <img src="~/Content/Admin/img/Dashboard/search.jpg" class="searchimage doup">
                            <input type="text" name="RejectedNotesearch" value="@Request.QueryString["RejectedNotesearch"]" class="form-control search-bar InputEmail1" placeholder="Search">
                            <input hidden name="RejectedNoteIndex" value=@Request.QueryString["RejectedNoteIndex"] />
                            <input hidden name="RejectedNoteTitleSort" value="@Request.QueryString["RejectedNoteTitleSort"]" />
                            <input hidden name="RejectedNoteCategorySort" value="@Request.QueryString["RejectedNoteCategorySort"]" />
                            <input hidden name="RejectedNoteRejectedBySort" value="@Request.QueryString["RejectedNoteRejectedBySort"]" />
                            <input hidden name="RejectedNoteSellerSort" value="@Request.QueryString["RejectedNoteSellerSort"]" />

                        </div>
                        <div class="btn-merge seller-mb">
                            <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>Search</b></button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @{
                    if (ViewBag.Rejected == "true")
                    {
                        <h3 class="NoRecord">No Record Found</h3>
                    }
                    else
                    {
                        <div class="grid-table table-responsive-xl">
                            <table class="table text-center">
                                <thead>
                                    <tr>
                                        <th scope="col" class="align-middle text-center">SR NO.</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("RejectedNotes", "Admin", new { RejectedNoteTitleSort = "title", RejectedNoteIndex = Request.QueryString["RejectedNoteIndex"], RejectedNoteSearch = Request.QueryString["RejectedNoteSearch"], RejectedNoteCategorySort = Request.QueryString["RejectedNoteCategorySort"], RejectedNoteRejectedBySort = Request.QueryString["RejectedNoteRejectedBySort"], RejectedNoteSellerSort = Request.QueryString["RejectedNoteSellerSort"] })'">NOTE TITLE</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("RejectedNotes", "Admin", new { RejectedNoteCategorySort = "category", RejectedNoteIndex = Request.QueryString["RejectedNoteIndex"], RejectedNoteSearch = Request.QueryString["RejectedNoteSearch"], RejectedNoteTitleSort = Request.QueryString["RejectedNoteTitleSort"], RejectedNoteRejectedBySort = Request.QueryString["RejectedNoteRejectedBySort"], RejectedNoteSellerSort = Request.QueryString["RejectedNoteSellerSort"] })'">CATEGORY</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("RejectedNotes", "Admin", new { RejectedNoteSellerSort = "seller", RejectedNoteIndex = Request.QueryString["RejectedNoteIndex"], RejectedNoteSearch = Request.QueryString["RejectedNoteSearch"], RejectedNoteCategorySort = Request.QueryString["RejectedNoteCategorySort"], RejectedNoteRejectedBySort = Request.QueryString["RejectedNoteRejectedBySort"], RejectedNoteTitleSort = Request.QueryString["RejectedNoteTitleSort"] })'">SELLER</th>
                                        <th scope="col" class="align-middle">DATE ADDED</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("RejectedNotes", "Admin", new { RejectedNoteRejectedBySort = "rejectedby", RejectedNoteIndex = Request.QueryString["RejectedNoteIndex"], RejectedNoteSearch = Request.QueryString["RejectedNoteSearch"], RejectedNoteCategorySort = Request.QueryString["RejectedNoteCategorySort"], RejectedNoteSellerSort = Request.QueryString["RejectedNoteSellerSort"], RejectedNoteTitleSort = Request.QueryString["RejectedNoteTitleSort"] })'">REJECTED BY</th>
                                        <th scope="col" class="align-middle">REMARK</th>
                                        <th scope="col" class="align-middle"></th>

                                        <th scope="col" class="align-middle"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{int index = 1;}
                                    @foreach (NotesMarketplace.Models.AdminCommon note in Model.rejectednote)
                                    {
                                        <tr>
                                            <td class="align-middle">@index</td>
                                            <td class="align-middle getpurple">@note.note.Title</td>
                                            <td class="align-middle">@note.note.Category</td>
                                            <td class="align-middle">@note.note.User.FirstName</td>
                                            <td class="align-middle">@note.note.ModifiedDate.Value.ToString("d"), @note.note.ModifiedDate.Value.ToString("t") </td>
                                            <td class="align-middle">@note.FirstName @note.LastName</td>
                                            <td class="align-middle">@note.note.Remark</td>
                                            <td class="align-middle">
                                                <div class="dropdown">
                                                    <a type="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <img src="~/Content/Admin/img/images/dots.png">
                                                    </a>
                                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                                                        <a class="dropdown-item" href="@Url.Action("ApproveNote","Admin", new { BookID = note.note.Note})">Approve</a>
                                                        <a class="dropdown-item" href="@Url.Action("DownloadNote","Admin", new { BookID = note.note.Note})">Download Notes</a>
                                                        <a class="dropdown-item" href="@Url.Action("BookID","Admin", new { id = note.note.Note})">View More Detail</a>
                                                    </div>
                                                </div>
                                            </td>
                                            <td></td>
                                        </tr>
                                        index++;
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
</section>
<!-- Rejected Notes Ends-->
<!-- Pagination -->
<section id="pagination">
    @Html.PagedListPager(Model.rejectednote, RejectedNoteIndex => Url.Action("RejectedNotes", "Admin", new { RejectedNoteIndex, RejectedNoteTitleSort = Request.QueryString["RejectedNoteTitleSort"], RejectedNoteSearch = Request.QueryString["RejectedNoteSearch"], RejectedNoteCategorySort = Request.QueryString["RejectedNoteCategorySort"], RejectedNoteRejectedBySort = Request.QueryString["RejectedNoteRejectedBySort"], RejectedNoteSellerSort = Request.QueryString["RejectedNoteSellerSort"]}), new PagedList.Mvc.PagedListRenderOptions
{
    ContainerDivClasses = null,
    LiElementClasses = new string[] { "page-item1" },
    UlElementClasses = new string[] { "pagination justify-content-center" },
    LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
    LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
    MaximumPageNumbersToDisplay = 5,
    DisplayEllipsesWhenNotShowingAllPageNumbers = false,
    DisplayLinkToFirstPage = PagedListDisplayMode.Never,
    DisplayLinkToLastPage = PagedListDisplayMode.Never

})
</section>
<!-- Pagination Ends-->