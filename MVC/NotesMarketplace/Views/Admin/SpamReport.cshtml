@model NotesMarketplace.Models.AdminSpamReport
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Spam_ActiveLink = "active";
    ViewBag.Title = "Spam Reports";
    Layout = "~/Views/Shared/AdminCommon.cshtml";
}
<!-- Spam Report -->
<section id="dashboard-publish" class="mydownload-margin">
    <div class="container">
        <div class="row top-table">
            <div class="col-12 col-sm-12 col-md-12 col-lg-6">
                <h3>Spam Report</h3>
            </div>
            <div class="col-12 col-sm-12 col-md-12 col-lg-6">
                <form>
                    <div class="row justify-content-end">
                        <div class="wrapper">
                            <img src="~/Content/Admin/img/Dashboard/search.jpg" class="searchimage doup">
                            <input type="text" name="SpamSearch" value="@Request.QueryString["SpamSearch"]" class="form-control search-bar InputEmail1" placeholder="Search">
                            <input hidden name="SpamIndex" value=@Request.QueryString["SpamIndex"] />
                            <input hidden name="SpamCategorySort" value="@Request.QueryString["SpamCategorySort"]" />
                            <input hidden name="SpamReportedBySort" value="@Request.QueryString["SpamReportedBySort"]" />
                            <input hidden name="SpamTitleSort" value="@Request.QueryString["SpamTitleSort"]" />
                        </div>
                        <div class="btn-merge">
                            <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>Search</b></button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @{
                    if (ViewBag.Spam == "true")
                    {
                        <h3 class="NoRecord">No Record Found</h3>
                    }
                    else
                    {
                        <div class="grid-table table-responsive-xl">
                            <table class="table text-center">
                                <thead>
                                    <tr>
                                        <th scope="col" class="align-middle text-center">SR NO.</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("SpamReport", "Admin", new {SpamReportedBySort = "reportedby", SpamIndex=Request.QueryString["SpamIndex"], SpamSearch=Request.QueryString["SpamSearch"], SpamTitleSort =Request.QueryString["SpamTitleSort"], SpamCategorySort =Request.QueryString["SpamCategorySort"]})'">REPORTED BY</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("SpamReport", "Admin", new {SpamTitleSort="title" ,SpamIndex=Request.QueryString["SpamIndex"], SpamSearch=Request.QueryString["SpamSearch"],SpamReportedBySort =Request.QueryString["SpamReportedBySort"],SpamCategorySort =Request.QueryString["SpamCategorySort"] })'">NOTE TITLE</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("SpamReport", "Admin", new { SpamCategorySort="category",SpamIndex=Request.QueryString["SpamIndex"], SpamSearch=Request.QueryString["SpamSearch"],SpamReportedBySort =Request.QueryString["SpamReportedBySort"],SpamTitleSort =Request.QueryString["SpamTitleSort"] })'">CATEGORY</th>
                                        <th scope="col" class="align-middle">DATE ADDED</th>
                                        <th scope="col" class="align-middle">REMARK</th>
                                        <th scope="col" class="align-middle">ACTION</th>
                                        <th scope="col" class="align-middle"></th>
                                        <th scope="col" class="align-middle"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{int index = 1;}
                                    @foreach (SpamReport Spam in Model.SpamReport)
                                    {
                                        <tr>
                                            <td class="align-middle">@index</td>
                                            <td class="align-middle">@Spam.User.FirstName @Spam.User.LastName</td>
                                            <td class="align-middle getpurple">@Spam.NoteDetail.Title</td>
                                            <td class="align-middle">@Spam.NoteDetail.Category</td>
                                            <td class="align-middle">@Spam.CreatedDate.Value.ToString("d"), @Spam.CreatedDate.Value.ToString("t")</td>
                                            <td class="align-middle">@Spam.Remark</td>
                                            <td class="align-middle"><a href="@Url.Action("DeleteSpam","Admin", new { id = Spam.NoteDetail.Note})"><img src="~/Content/Admin/img/images/delete.png"></a></td>
                                            <td class="align-middle">
                                                <div class="dropdown">
                                                    <a type="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <img src="~/Content/Admin/img/images/dots.png">
                                                    </a>
                                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">
                                                        <a class="dropdown-item" href="@Url.Action("DownloadNote","Admin", new { BookID = Spam.NoteDetail.Note})">Download Notes</a>
                                                        <a class="dropdown-item" href="@Url.Action("BookID","Admin", new { id = Spam.NoteDetail.Note})">View More Detail</a>

                                                    </div>
                                                </div>
                                            </td>
                                            <td></td>
                                        </tr>
                                        index++;
                                    }
                                    </tbody>
                            </table>
                        </div>
                                        }
                    }
                    </div>


        </div>
    </div>
</section>
<!-- Spam Report Ends -->
<section id="pagination">
    @Html.PagedListPager(Model.SpamReport, SpamIndex => Url.Action("SpamReport", "Admin", new { SpamIndex, SpamTitleSort = Request.QueryString["SpamTitleSort"], SpamSearch = Request.QueryString["SpamSearch"], SpamReportedBySort = Request.QueryString["SpamReportedBySort"], SpamCategorySort = Request.QueryString["SpamCategorySort"] }), new PagedList.Mvc.PagedListRenderOptions
{
    ContainerDivClasses = null,
    LiElementClasses = new string[] { "page-item1" },
    UlElementClasses = new string[] { "pagination justify-content-center" },
    LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
    LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
    MaximumPageNumbersToDisplay = 5,
    DisplayEllipsesWhenNotShowingAllPageNumbers = false,
    DisplayLinkToFirstPage = PagedListDisplayMode.Never,
    DisplayLinkToLastPage = PagedListDisplayMode.Never

})
</section>