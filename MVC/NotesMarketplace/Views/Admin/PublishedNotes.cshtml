@model NotesMarketplace.Models.AdminPublishedNotes
@using PagedList;
@using PagedList.Mvc;
@{
    ViewBag.Notes_ActiveLink = "active";
    ViewBag.Title = "Publsihed Notes";
    Layout = "~/Views/Shared/AdminCommon.cshtml";
}
<!-- Modal -->
<div class="modal fade modal-download" id="exampleModal1" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">

        <div class="row">
            <div class="col-xl-12">
                <form action="unpublish">
                    <div class="modal-content add-review">

                        <div class="modal-header">

                            <a type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <i class="fa fa-close 2x"></i>
                            </a>
                        </div>
                        <div class="model-data">

                            <div class="modal-head text-left">
                                <h2>Unpublish Notes</h2>
                                <input type="hidden" name="bookId2" id="bookId2" value="" />
                            </div>
                            <div class="middel-content text-left content-justify-left">


                                <div class="row">
                                    <div class="col-12">
                                        <div class="form-group">
                                            <div class="textarea-input">
                                                <label class="mylabel" for="InputEmail1">Comments *</label>
                                                <textarea name="Comment" id="Comment" placeholder="Comments..." class="form-control InputEmail1"></textarea>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-12">
                                        <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>submit</b></button>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </div>
                </form>
            </div>
        </div>

    </div>
</div>
<!-- Modal -->

<!-- Published Notes -->
<section id="dashboard-publish" class="mydownload-margin">
    <div class="container">
        <div class="row">
            <div class="col-12 col-sm-12 col-md-12 col-lg-12">
                <h3>Published Notes</h3>
            </div>
        </div>

        <div class="row top-table">
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
                <div class="div-seller text-center">
                    <p class="seller-text text-left"><span>Seller</span></p>
                    <select class="form-control inputselect seller-dd" onchange="location.href = this.value">


                        <option value="@Url.Action("PublishedNotes", "Admin", new { sellerddl = "" })">Select Seller</option>
                        @foreach (String sellerddl in Model.Sellerddl)
                        {
                            if (Request.QueryString["sellerddl"] != null)
                            {
                                if (Request.QueryString["sellerddl"].Equals(sellerddl))
                                {
                                    <option selected value="@Url.Action("PublishedNotes", "Admin", new { sellerddl = sellerddl })">@sellerddl</option>
                                    continue;
                                }
                            }
                            <option value="@Url.Action("PublishedNotes", "Admin", new { sellerddl = sellerddl, })">@sellerddl</option>
                        }
                    </select>

                </div>
            </div>
            <div class="col-xs-12 col-sm-12 col-md-12 col-lg-6">
                <form>
                    <div class="row justify-content-end extra-margin3 last-margin">
                        <div class="wrapper seller-mb">

                            <img src="~/Content/Admin/img/Dashboard/search.jpg" class="searchimage doup">
                            <input type="text" name="PublishedNotesearch" value="@Request.QueryString["PublishedNotesearch"]" class="form-control search-bar InputEmail1" placeholder="Search">
                            <input hidden name="PublishedNoteIndex" value=@Request.QueryString["PublishedNoteIndex"] />
                            <input hidden name="PublishedNoteTitleSort" value="@Request.QueryString["PublishedNoteTitleSort"]" />
                            <input hidden name="PublishedNoteCategorySort" value="@Request.QueryString["PublishedNoteCategorySort"]" />
                            <input hidden name="PublishedNoteApprovedBySort" value="@Request.QueryString["PublishedNoteApprovedBySort"]" />
                            <input hidden name="PublishedNoteSellerSort" value="@Request.QueryString["PublishedNoteSellerSort"]" />
                            <input hidden name="PublishedNoteNODSort" value="@Request.QueryString["PublishedNoteNODSort"]" />
                            <input hidden name="PublishedNoteApprovedBySort" value="@Request.QueryString["PublishedNoteApprovedBySort"]" />
                        </div>
                        <div class="btn-merge seller-mb">
                            <button type="submit" class="btn text-uppercase text-center" id="mybtn"><b>Search</b></button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
        <div class="row">
            <div class="col-md-12">
                @{
                    if (ViewBag.Published == "true")
                    {
                        <h3 class="NoRecord">No Record Found</h3>
                    }
                    else
                    {
                        <div class="grid-table table-responsive-xl">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th scope="col" class="align-middle text-center">SR NO.</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("PublishedNotes", "Admin", new { PublishedNoteTitleSort = "title", PublishedNoteIndex = Request.QueryString["PublishedNoteIndex"], PublishedNoteSearch = Request.QueryString["PublishedNoteSearch"], PublishedNoteCategorySort = Request.QueryString["PublishedNoteCategorySort"], PublishedNoteApprovedBySort = Request.QueryString["PublishedNoteApprovedBySort"], PublishedNoteSellerSort = Request.QueryString["PublishedNoteSellerSort"],PublishedNoteNODSort = Request.QueryString["PublishedNoteNODSort"],PublishedNotePriceSort=Request.QueryString["PublishedNotePriceSort"] })'">NOTE TITLE</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("PublishedNotes", "Admin", new { PublishedNoteCategorySort = "category", PublishedNoteIndex = Request.QueryString["PublishedNoteIndex"], PublishedNoteSearch = Request.QueryString["PublishedNoteSearch"], PublishedNoteTitleSort = Request.QueryString["PublishedNoteTitleSort"], PublishedNoteApprovedBySort = Request.QueryString["PublishedNoteApprovedBySort"], PublishedNoteSellerSort = Request.QueryString["PublishedNoteSellerSort"],PublishedNoteNODSort = Request.QueryString["PublishedNoteNODSort"],PublishedNotePriceSort=Request.QueryString["PublishedNotePriceSort"] })'">CATEGORY</th>
                                        <th scope="col" class="align-middle">SELL TYPE</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("PublishedNotes", "Admin", new { PublishedNotePriceSort="price" ,PublishedNoteCategorySort = Request.QueryString["PublishedNoteCategorySort"], PublishedNoteIndex = Request.QueryString["PublishedNoteIndex"], PublishedNoteSearch = Request.QueryString["PublishedNoteSearch"], PublishedNoteTitleSort = Request.QueryString["PublishedNoteTitleSort"], PublishedNoteApprovedBySort = Request.QueryString["PublishedNoteApprovedBySort"], PublishedNoteSellerSort = Request.QueryString["PublishedNoteSellerSort"],PublishedNoteNODSort = Request.QueryString["PublishedNoteNODSort"] })'">PRICE</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("PublishedNotes", "Admin", new { PublishedNoteSellerSort = "seller", PublishedNoteIndex = Request.QueryString["PublishedNoteIndex"], PublishedNoteSearch = Request.QueryString["PublishedNoteSearch"], PublishedNoteCategorySort = Request.QueryString["PublishedNoteCategorySort"], PublishedNoteApprovedBySort = Request.QueryString["PublishedNoteApprovedBySort"], PublishedNoteTitleSort = Request.QueryString["PublishedNoteTitleSort"] ,PublishedNoteNODSort = Request.QueryString["PublishedNoteNODSort"],PublishedNotePriceSort=Request.QueryString["PublishedNotePriceSort"]})'">SELLER</th>
                                        <th scope="col" class="align-middle">PUBLISHED DATE</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("PublishedNotes", "Admin", new { PublishedNoteApprovedBySort = "approvedby", PublishedNoteIndex = Request.QueryString["PublishedNoteIndex"], PublishedNoteSearch = Request.QueryString["PublishedNoteSearch"], PublishedNoteCategorySort = Request.QueryString["PublishedNoteCategorySort"], PublishedNoteSellerSort = Request.QueryString["PublishedNoteSellerSort"], PublishedNoteTitleSort = Request.QueryString["PublishedNoteTitleSort"] ,PublishedNoteNODSort = Request.QueryString["PublishedNoteNODSort"],PublishedNotePriceSort=Request.QueryString["PublishedNotePriceSort"]})'">APPROVED BY</th>
                                        <th scope="col" class="align-middle" onclick="location.href='@Url.Action("PublishedNotes", "Admin", new { PublishedNoteNODSort = "NOD",PublishedNoteApprovedBySort = Request.QueryString["PublishedNoteApprovedBySort"], PublishedNoteIndex = Request.QueryString["PublishedNoteIndex"], PublishedNoteSearch = Request.QueryString["PublishedNoteSearch"], PublishedNoteCategorySort = Request.QueryString["PublishedNoteCategorySort"], PublishedNoteSellerSort = Request.QueryString["PublishedNoteSellerSort"], PublishedNoteTitleSort = Request.QueryString["PublishedNoteTitleSort"],PublishedNotePriceSort=Request.QueryString["PublishedNotePriceSort"] })'">NUMBER OF<br>DOWNLOAD</th>
                                        <th scope="col" class="align-middle"></th>

                                        <th scope="col" class="align-middle"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{int index = 1;}
                                    @foreach (NotesMarketplace.Models.AdminCommon note in Model.publishednote)
                                    {
                                        <tr>
                                            <td class="align-middle">@index</td>
                                            <td class="align-middle getpurple">@note.note.Title</td>
                                            <td class="align-middle">@note.note.Category</td>
                                            @if (note.note.SellPrice == 0)
                                            {
                                                <td class="align-middle">Free</td>
                                                <td class="align-middle">$0</td>

                                            }
                                            else
                                            {
                                                <td class="align-middle">Paid</td>
                                                <td class="align-middle">$@note.note.SellPrice</td>
                                            }

                                            <td class="align-middle">@note.note.User.FirstName @note.note.User.LastName <i class="icon-margin"><img src="~/Content/Admin/img/images/eye.png"></i></td>
                                            <td class="align-middle">@note.note.ModifiedDate.Value.ToString("d"), @note.note.ModifiedDate.Value.ToString("t")</td>
                                            <td class="align-middle">@note.FirstName @note.LastName</td>
                                            <td class="align-middle getpurple text-center">@note.NumberOfDownload</td>

                                            <td class="align-middle">
                                                <div class="dropdown">
                                                    <a type="button" id="dropdownMenuLink" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                                        <img src="~/Content/Admin/img/images/dots.png">
                                                    </a>
                                                    <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuLink">

                                                        <a class="dropdown-item" href="@Url.Action("DownloadNote","Admin", new { BookID = note.note.Note})">Download Notes</a>
                                                        <a class="dropdown-item" href="@Url.Action("BookID","Admin", new { id = note.note.Note})">View More Detail</a>

                                                        <a class="dropdown-item open-AddBookDialog" href="#" type="submit" data-toggle="modal" data-id="@note.note.Note" data-target="#exampleModal1">Unpublish</a>

                                                    </div>
                                                </div>
                                            </td>
                                            <td></td>
                                        </tr>

                                        index++;
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                }
            </div>


        </div>
    </div>
</section>
<!-- Published Notes -->
<!-- Pagination -->
<section id="pagination">
    @Html.PagedListPager(Model.publishednote, PublishedNoteIndex => Url.Action("PublishedNotes", "Admin", new { PublishedNoteIndex, PublishedNoteTitleSort = Request.QueryString["PublishedNoteTitleSort"], PublishedNoteSearch = Request.QueryString["PublishedNoteSearch"], PublishedNoteCategorySort = Request.QueryString["PublishedNoteCategorySort"], PublishedNoteApprovedBySort = Request.QueryString["PublishedNoteApprovedBySort"], PublishedNoteSellerSort = Request.QueryString["PublishedNoteSellerSort"], PublishedNoteNODSort = Request.QueryString["PublishedNoteNODSort"], PublishedNotePriceSort = Request.QueryString["PublishedNotePriceSort"] }), new PagedList.Mvc.PagedListRenderOptions
{
    ContainerDivClasses = null,
    LiElementClasses = new string[] { "page-item1" },
    UlElementClasses = new string[] { "pagination justify-content-center" },
    LinkToNextPageFormat = "<i class='fa fa-chevron-right'></i>",
    LinkToPreviousPageFormat = "<i class='fa fa-chevron-left'></i>",
    MaximumPageNumbersToDisplay = 5,
    DisplayEllipsesWhenNotShowingAllPageNumbers = false,
    DisplayLinkToFirstPage = PagedListDisplayMode.Never,
    DisplayLinkToLastPage = PagedListDisplayMode.Never

})
</section>

<!-- Pagination Ends-->